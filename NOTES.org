
#+BEGIN_SRC bash
group=566
api="https://qa-oapolicy.universityofcalifornia.edu:8002/elements-secure-api/v5.5"
http="http --session-read-only=ucd"

cats=users

next="${api}/${cats}?group-membership=implicit&groups=${group}&detail=full"
let n=0;
while [[ -n ${next} ]]; do
  fn=feed/${cats}.${n};
  ${http} "${next}" | xmllint --format - | tee ${fn};
  next=$(xmlstarlet sel -T -N a="http://www.w3.org/2005/Atom" -t -v '//api:page[@position="next"]/@href' ${fn});
  let n+=1;
done

#+END_SRC

#+BEGIN_SRC bash
group=566
api="https://qa-oapolicy.universityofcalifornia.edu:8002/elements-secure-api/v5.5"
http="http --session-read-only=ucd"

cats=publicaations

next="${api}/${cats}?group-membership=implicit&groups=${group}&detail=full"
let n=0;
while [[ -n ${next} ]]; do
  printf -v N "%03d" $n
  fn=${cats}.${N};
  echo ${fn};
  ${http} "${next}" | xmllint --format - > ${fn};
  next=$(xmlstarlet sel -T -N a="http://www.w3.org/2005/Atom" -t -v '//api:page[@position="next"]/@href' ${fn});
  let n+=1;
done

#+END_SRC

#+RESULTS:
: publicaations.000

Now we want to extract all these users and publications to their proper location

#+BEGIN_SRC bash
cats=users
sel="xmlstarlet sel -N a=http://www.w3.org/2005/Atom"
for f in ${cats}.[0-9]*; do
 for id in $(${sel} -t -v '//a:entry/api:object/@id' $f); do
   ${sel} -D -t -c "//a:entry[api:object/@id=${id}]" $f | tee users/${id}
 done
done
#+END_SRC


#+BEGIN_SRC bash
cats=publications
[[-d ${cats} ]] || mkdir -p ${cats}
sel="xmlstarlet sel -N a=http://www.w3.org/2005/Atom"
for f in ${cats}.[0-9][0-9][0-9]*; do
 for id in $(${sel} -t -v '//a:entry/api:object/@id' $f); do
   echo ${cats}/${id}
   ${sel} -D -t -c "//a:entry[api:object/@id=${id}]" $f > ${cats}/${id}
 done
done
#+END_SRC

And Now relationships.  For every User, we need to make sure we get all the
passed relationships.

#+BEGIN_SRC bash
http="http --session-read-only=ucd"

for f in raw-records/user/*; do
  u=$(basename $f);
  next=$($sel -t -v //api:relationships/@href $f)
  next+='?details=full'
  let n=0;
  while [[ -n ${next} ]]; do
    printf -v N "%03d" $n
    fn=feed/relationships.${u}.${N};
    echo ${fn};
echo "${http} ${next}"
#    ${http} "${next}" | xmllint --format - > ${fn};
    next=$(xmlstarlet sel -T -N a="http://www.w3.org/2005/Atom" -t -v '//api:page[@position="next"]/@href' ${fn});
    let n+=1;
  done
done
#+END_SRC

And now we can create all the individual ones.

#+BEGIN_SRC bash
cats=relationships
[[-d ${cats} ]] || mkdir -p ${cats}
sel="xmlstarlet sel -N a=http://www.w3.org/2005/Atom"
for f in *.${cats}.[0-9][0-9][0-9]*; do
 echo $f
 for id in $(${sel} -t -v '//a:entry/api:relationship/@id' $f); do
   echo ${cats}/${id}
   ${sel} -D -t -c "//a:entry[api:relationship/@id=${id}]" $f > ${cats}/${id}
 done
done
#+END_SRC

#+RESULTS:
: *.relationships.[0-9][0-9][0-9]*
